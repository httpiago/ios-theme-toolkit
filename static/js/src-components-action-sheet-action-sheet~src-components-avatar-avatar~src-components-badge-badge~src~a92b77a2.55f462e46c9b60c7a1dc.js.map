{"version":3,"sources":["webpack:///./src/Utils.js","webpack:///./src/components/ActionSheet/ActionSheet.js","webpack:///./src/components/Button/Button.js","webpack:///./src/components/ButtonGroup/ButtonGroup.js","webpack:///./src/components/Drawer/Drawer.js","webpack:///./src/components/Input/Input.js","webpack:///./src/components/List/List.js","webpack:///./src/components/Modal/Modal.js","webpack:///./src/components/Portal/Portal.js","webpack:///./src/components/Toggle/Toggle.js","webpack:///./src/components/ProgressBar/ProgressBar.js","webpack:///./src/components/Avatar/Avatar.js","webpack:///./src/components/Spinner/Spinner.js","webpack:///./src/components/Checkbox/Checkbox.js","webpack:///./src/components/Radio/Radio.js","webpack:///./src/components/RangeSlider/RangeSlider.js","webpack:///./src/components/Badge/Badge.js","webpack:///./src/components/Popover/Popover.js","webpack:///./src/components/Card/Card.js","webpack:///./src/components/Tooltip/Tooltip.js","webpack:///./src/index.js"],"names":["mapClassList","classesObj","arguments","length","undefined","Object","entries","map","_ref","_ref2","_slicedToArray","klass","prop","filter","item","join","canUseDOM","window","global","document","createElement","ActionSheet","content","buttons","aditionalClasses","className","closeOnInnerClick","onRequestClose","rest","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","_Drawer_Drawer__WEBPACK_IMPORTED_MODULE_2__","assign","concat","placement","backdrop","closeByBackdropClick","onClick","Fragment","_ButtonGroup_ButtonGroup__WEBPACK_IMPORTED_MODULE_3__","vertical","React","Children","toArray","defaultProps","Button","_mapClassList","children","htmlType","fill","outline","block","round","onlyIcon","uppercase","color","size","prefix","classes","_defineProperty","role","type","disabled","event","ButtonGroup","Drawer","drawerRef","createRef","hideDrawer","_this","current","style","styleProp","showDrawer","drawerElement","props","value","body","offsetWidth","offsetHeight","closeDrawer","Component","prevProps","this","visible","_this$props","_Portal_Portal__WEBPACK_IMPORTED_MODULE_2__","ref","Input","autosize","onEnter","onCancel","handleKeyDown","keyCode","String","onKeyDown","onFocus","onBlur","List","Item","href","target","after","media","propTypes","PropTypes","string","node","Modal","title","footer","verticalButtons","onOpen","onClose","_Portal_Portal__WEBPACK_IMPORTED_MODULE_3__","_ButtonGroup_ButtonGroup__WEBPACK_IMPORTED_MODULE_2__","Portal","defaultNode","removeChild","appendChild","ReactDOM","createPortal","Toggle","react_default","ProgressBar","height","infinite","ProgressBar_objectWithoutProperties","ProgressBar_defineProperty","percentage","Math","max","min","width","Avatar","src","Avatar_objectWithoutProperties","Avatar_defineProperty","Spinner","Spinner_objectWithoutProperties","Checkbox","Checkbox_objectWithoutProperties","Checkbox_defineProperty","Radio","Radio_objectWithoutProperties","Radio_defineProperty","RangeSlider","RangeSlider_objectWithoutProperties","Badge","Badge_objectWithoutProperties","Badge_defineProperty","step","onChange","Popover","state","isOpen","popoverPosition","top","left","arrowPosition","childrenRef","popoverRef","open","setState","calcPopoverPosition","getElementsByClassName","focus","close","troggleVisibility","child","getBoundingClientRect","pop","childWidthMiddle","childHeightMiddle","maxLeft","innerWidth","scrollY","scrollX","handleClick","contains","_this2","trigger","t","addEventListener","me","setTimeout","mouseEnterDelay","ml","clearTimeout","removeEventListener","withoutArrow","Popover_objectWithoutProperties","Popover_defineProperty","_this$state","tabIndex","Card","shadow","header","Card_objectWithoutProperties","Card_defineProperty","Tooltip","text","Tooltip_objectWithoutProperties","Popover_Popover","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/src-components-action-sheet-action-sheet~src-components-avatar-avatar~src-components-badge-badge~src~a92b77a2.8ce4ecbc.js","sourcesContent":["/**\r\n * @export\r\n * @param {Object} classesObj { ... }\r\n * @returns {string} Concatened classes array into string\r\n *\r\n * @example\r\n * // if \"fill\" value are defined (!== 'undefined'), the class \"button--fill\" in key will be returned with final result\r\n * mapClassList({\r\n *   [`button--fill`]: fill,\r\n * })\r\n */\r\nexport function mapClassList(classesObj = {}) {\r\n  return Object.entries(classesObj)\r\n    .map(([klass, prop]) => {\r\n      return (typeof prop !== 'undefined' && typeof prop !== 'number' && prop !== false && prop !== 'default') ? klass : false\r\n    })\r\n    .filter(item => (item !== false))\r\n    .join(' ')\r\n}\r\n\r\n\r\n/**\r\n * @export\r\n * @returns {boolean}\r\n */\r\nexport function canUseDOM() {\r\n  const window = window || global.window\r\n  return !!(\r\n    typeof window !== 'undefined' &&\r\n    window.document &&\r\n    window.document.createElement\r\n  )\r\n}\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\nimport Drawer from '../Drawer/Drawer'\nimport ButtonGroup from '../ButtonGroup/ButtonGroup'\n\n/**\n * ActionSheet component.\n *\n * @since 0.5.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/ActionSheet\n */\nexport default function ActionSheet({ content, buttons, className: aditionalClasses, closeOnInnerClick, onRequestClose, ...rest }) {\n\n  const prefix = 'action-sheet'\n  //const classes = mapClassList({})\n\n  const handleInnerClick = () => {\n    if (closeOnInnerClick === true) onRequestClose()\n  }\n\n  return (\n    <Drawer\n      className={`${prefix} ${aditionalClasses}`}\n      {...rest}\n      placement=\"bottom\"\n      backdrop\n      closeByBackdropClick={true}\n      onRequestClose={onRequestClose}\n      onClick={handleInnerClick}\n      content={(\n        <React.Fragment>\n          {content && <div className=\"action-sheet__content\">{content}</div>}\n\n          {buttons && (\n            <ButtonGroup\n              vertical={true}\n              className=\"modal__buttons\"\n            >\n              {React.Children.toArray(buttons)}\n            </ButtonGroup>\n          )}\n        </React.Fragment>\n      )}\n    />\n  )\n}\n\nActionSheet.defaultProps = {\n  className: '',\n  content: null,\n  closeOnInnerClick: true\n}\n\nActionSheet.propTypes = {\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Content above the buttons */\n  content: PropTypes.node,\n  /** Buttons */\n  buttons: PropTypes.arrayOf(PropTypes.node),\n  /** Function that will be called when the user clicks outside of elment and in the future when pressing the esc key */\n  onRequestClose: PropTypes.func.isRequired,\n  /** Close when user click inside action sheet */\n  closeOnInnerClick: PropTypes.bool,\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { mapClassList } from '../../Utils'\r\n\r\n/**\r\n * Button component.\r\n *\r\n * @since 0.1.0\r\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Button\r\n */\r\nexport default function Button({ children, htmlType, fill, outline, block, round, onlyIcon, uppercase, color, size, className: aditionalClasses, ...rest }) {\r\n\r\n  const prefix = 'button'\r\n  const classes = mapClassList({\r\n    [`${prefix}--fill`]: fill,\r\n    [`${prefix}--outline`]: outline,\r\n    [`${prefix}--block`]: block,\r\n    [`${prefix}--round`]: round,\r\n    [`${prefix}--onlyIcon`]: onlyIcon,\r\n    [`${prefix}--uppercase`]: uppercase,\r\n    [`${prefix}--${color}`]: color,\r\n    [`${prefix}--${size}`]: size,\r\n  })\r\n\r\n  if ('href' in rest) {\r\n    // Return link button\r\n    return (\r\n      <a\r\n        className={`${prefix} ${classes} ${aditionalClasses}`}\r\n        role=\"button\"\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </a>\r\n    )\r\n  } else {\r\n    // Return button\r\n    return (\r\n      <button\r\n        type={htmlType}\r\n        className={`${prefix} ${classes} ${aditionalClasses}`}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nButton.defaultProps = {\r\n  fill: false,\r\n  outline: false,\r\n  round: false,\r\n  color: 'blue',\r\n  size: 'default',\r\n  block: false,\r\n  disabled: false,\r\n  onlyIcon: false,\r\n  uppercase: false,\r\n  htmlType: 'button',\r\n  onClick: function (event) {},\r\n  className: ''\r\n}\r\n\r\nButton.propTypes = {\r\n  /** Anything that can be rendered by React. */\r\n  children: PropTypes.node,\r\n  /** Fill the background with a solid color set in the \"color\" property. */\r\n  fill: PropTypes.bool,\r\n  /** Remove bordes. */\r\n  outline: PropTypes.bool,\r\n  /** Button with or not round edges. */\r\n  round: PropTypes.bool,\r\n  /** Button color. */\r\n  color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'gray', 'white', 'black' ]),\r\n  /** Size of the button. */\r\n  size: PropTypes.oneOf([ 'default', 'small', 'big' ]),\r\n  /** Fit button width to its parent width. */\r\n  block: PropTypes.bool,\r\n  /** Disable or not the button. */\r\n  disabled: PropTypes.bool,\r\n  /** Only icon. */\r\n  onlyIcon: PropTypes.bool,\r\n  /** Transform all the text inside the button in the uppercase. */\r\n  uppercase: PropTypes.bool,\r\n  /** If set, the component renders a link shaped as button. */\r\n  href: PropTypes.string,\r\n  /** Same as target attribute of a, works when href is specified. */\r\n  target: PropTypes.string,\r\n  /** Aditional classes. */\r\n  className: PropTypes.string,\r\n  /** Set the original html type of button, see: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type */\r\n  htmlType: PropTypes.oneOf([ 'submit', 'button', 'reset' ]),\r\n  /** Function that will be called when the user clicks the button. */\r\n  onClick: PropTypes.func\r\n}\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * ButtonGroup component.\n *\n * @since 0.1.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/ButtonGroup\n */\nexport default function ButtonGroup({ children, round, outline, vertical, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'button-group'\n  const classes = mapClassList({\n    [`${prefix}--round`]: round,\n    [`${prefix}--outline`]: outline,\n    [`${prefix}--${vertical ? 'vertical' : 'horizontal'}`]: true,\n  })\n\n  return (\n    <div\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      {...rest}\n    >\n      {children}\n    </div>\n  )\n}\n\nButtonGroup.defaultProps = {\n  round: false,\n  className: '',\n  vertical: false,\n  outline: false,\n  children: [],\n}\n\nButtonGroup.propTypes = {\n  /** Round edges */\n  round: PropTypes.bool,\n  /** Remove external borders */\n  outline: PropTypes.bool,\n  /** Position of the buttons */\n  vertical: PropTypes.bool,\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** The Buttons. (Only accepts \"Button\" components as children\") */\n  children: PropTypes.node.isRequired\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { mapClassList } from '../../Utils'\r\nimport Portal from '../Portal/Portal'\r\n\r\n/**\r\n * Drawer component.\r\n *\r\n * @since 0.5.0\r\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Drawer\r\n */\r\nexport default class Drawer extends React.Component {\r\n  drawerRef = React.createRef()\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.visible !== prevProps.visible) {\r\n      if (this.props.visible === true) this.showDrawer()\r\n      else this.hideDrawer()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide drawer with animation\r\n   */\r\n  hideDrawer = () => {\r\n    this.drawerRef.current.style[this.styleProp] = ''\r\n  }\r\n\r\n  /**\r\n   * Show drawer with animation\r\n   */\r\n  showDrawer = () => {\r\n    const drawerElement = this.drawerRef.current\r\n    const { placement } = this.props\r\n\r\n    if (placement == 'right') {\r\n      var styleProp = 'left'\r\n      var value = document.body.offsetWidth - drawerElement.offsetWidth\r\n    } else if (placement == 'left') {\r\n      var styleProp = 'right'\r\n      var value = document.body.offsetWidth - drawerElement.offsetWidth\r\n    } else if (placement == 'top') {\r\n      var styleProp = 'bottom'\r\n      var value = document.body.offsetHeight - drawerElement.offsetHeight\r\n    } else if (placement == 'bottom') {\r\n      var styleProp = 'top'\r\n      var value = document.body.offsetHeight - drawerElement.offsetHeight\r\n    }\r\n\r\n    // Save for be used in closeDrawer\r\n    this.styleProp = styleProp\r\n\r\n    drawerElement.style[styleProp] = value + 'px'\r\n  }\r\n\r\n  closeDrawer = () => {\r\n    if (this.props.closeByBackdropClick === false) return\r\n\r\n    this.props.onRequestClose()\r\n  }\r\n\r\n  render() {\r\n    const { content, visible, placement, backdrop, className: aditionalClasses, onRequestClose, closeByBackdropClick, ...rest } = this.props\r\n\r\n    const prefix = 'drawer'\r\n    const classes = mapClassList({\r\n      [`${prefix}--${placement}`]: true,\r\n    })\r\n\r\n    return (\r\n      <Portal>\r\n        {visible && backdrop && <div className=\"drawer__backdrop\" onClick={this.closeDrawer} />}\r\n\r\n        <div\r\n          ref={this.drawerRef}\r\n          className={`${prefix} ${classes} ${aditionalClasses} ${visible ? 'drawer--visible' : ''}`}\r\n          {...rest}\r\n        >\r\n          {content}\r\n        </div>\r\n      </Portal>\r\n    )\r\n  }\r\n}\r\n\r\nDrawer.defaultProps = {\r\n  className: '',\r\n  placement: 'right',\r\n  backdrop: true,\r\n  closeByBackdropClick: true,\r\n}\r\n\r\nDrawer.propTypes = {\r\n  /** Aditional classes. */\r\n  className: PropTypes.string,\r\n  /** The visibility state of drawer */\r\n  visible: PropTypes.bool.isRequired,\r\n  /** Drawer content */\r\n  content: PropTypes.node.isRequired,\r\n  /** Drawer placement */\r\n  placement: PropTypes.oneOf(['top', 'left', 'bottom', 'right']),\r\n  /** Function that will be called when the user clicks outside of modal and in the future when pressing the esc key */\r\n  onRequestClose: PropTypes.func.isRequired,\r\n  /** Show a transparent background behind the drawer */\r\n  backdrop: PropTypes.bool,\r\n  /** Close the drawer when user click in the backdrop */\r\n  closeByBackdropClick: PropTypes.bool\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { mapClassList } from '../../Utils'\r\n\r\n/**\r\n * Input component.\r\n *\r\n * @since 0.1.0\r\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Input\r\n */\r\nexport default function Input({ htmlType, autosize, fill, color, round, block, className: aditionalClasses, onEnter, onCancel, ...rest }) {\r\n\r\n  const prefix = 'input-text'\r\n  const classes = mapClassList({\r\n    [`${prefix}--fill`]: fill,\r\n    [`${prefix}--round`]: round,\r\n    [`${prefix}--block`]: block,\r\n    [`${prefix}--${color}`]: color\r\n  })\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.keyCode === 13 && onEnter) onEnter(event)\r\n    else if (event.keyCode === 27 && onCancel) onCancel(event)\r\n  }\r\n\r\n  if (htmlType === 'textarea') {\r\n    return (\r\n      <textarea\r\n        className={`${prefix} ${classes} ${aditionalClasses}`}\r\n        autosize={String(autosize)}\r\n        onKeyDown={handleKeyDown}\r\n        {...rest}\r\n      />\r\n    )\r\n  } else {\r\n    return (\r\n      <input\r\n        type={htmlType}\r\n        className={`${prefix} ${classes} ${aditionalClasses}`}\r\n        onKeyDown={handleKeyDown}\r\n        {...rest}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nInput.defaultProps = {\r\n  htmlType: 'text',\r\n  round: false,\r\n  block: false,\r\n  color: 'default',\r\n  autosize: false,\r\n  className: '',\r\n\r\n  onEnter: function(event) {},\r\n  onCancel: function(event) {},\r\n  onFocus: function(event) {},\r\n  onBlur: function(event) {},\r\n}\r\n\r\nInput.propTypes = {\r\n  /** Max length of input */\r\n  maxLength: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\r\n  /** Disable or not the input. */\r\n  disabled: PropTypes.bool,\r\n  /** The input value for CONTROLLED components. */\r\n  value: PropTypes.string,\r\n  /** The initial input value for UNCONTROLLED components. */\r\n  defaultValue: PropTypes.string,\r\n  /** Default value that is shown when input is empty. */\r\n  placeholder: PropTypes.string,\r\n  /** Height autosize feature. (not finished) */\r\n  autosize: PropTypes.oneOfType([ PropTypes.bool, PropTypes.string ]),\r\n  /** Fit input width to its parent width. */\r\n  block: PropTypes.bool,\r\n  /** Round edges. */\r\n  round: PropTypes.bool,\r\n  /** Input color */\r\n  color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'white', 'black' ]),\r\n  /** Aditional classes. */\r\n  className: PropTypes.string,\r\n  /** Set the original html type of input tag */\r\n  htmlType: PropTypes.oneOf([ 'text', 'textarea', 'password', 'number', 'email', 'url', 'search', 'tel', 'time', 'date', 'file' ]),\r\n  /** Function that will called when user press Enter key */\r\n  onEnter: PropTypes.func,\r\n  /** Function that will called when user press ESC key */\r\n  onCancel: PropTypes.func,\r\n\r\n  onFocus: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  onKeyDown: PropTypes.func,\r\n  onKeyUp: PropTypes.func\r\n}\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * List component.\n *\n * @since 0.2.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/List\n */\nexport default function List({ children, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'list'\n  const classes = ''//mapClassList({})\n\n  return (\n    <ul\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      {...rest}\n    >\n      {children}\n    </ul>\n  )\n}\n\nList.defaultProps = {\n  className: '',\n}\n\nList.propTypes = {\n  /** Aditional classes. */\n  className: PropTypes.string,\n}\n\n\n/**\n * List.Item component.\n *\n * @since 0.2.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/List\n */\nList.Item = function({ children, href, target, after, media, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'list__item'\n  const classes = mapClassList({\n    [`${prefix}--link`]: href,\n  })\n\n  const content = (\n    <React.Fragment>\n      {media && (<div className=\"list__item__media\">{media}</div>)}\n\n      <div className=\"list__item__content\">\n        {children}\n\n        {after && (<div className=\"list__item__after\">{after}</div>)}\n      </div>\n    </React.Fragment>\n  )\n\n  return (\n    <li\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      {...rest}\n    >\n      {href ? (<a href={href} target={target ? target : undefined}>{content}</a>) : content }\n    </li>\n  )\n}\n\nList.Item.defaultProps = {\n  className: ''\n}\n\nList.Item.propTypes = {\n  /** Aditional classes */\n  className: PropTypes.string,\n  /** Item with link */\n  href: PropTypes.string,\n  /** link target */\n  target: PropTypes.string,\n  /** Item media (anything that can be rendered by React, link <img/>) */\n  media: PropTypes.node,\n  /** Item after (anything that can be rendered by React, link <Badge/> or text) */\n  after: PropTypes.node,\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { mapClassList } from '../../Utils'\r\nimport ButtonGroup from '../ButtonGroup/ButtonGroup'\r\nimport Portal from '../Portal/Portal'\r\n\r\n/**\r\n * Modal component.\r\n *\r\n * @since 0.3.0\r\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Modal\r\n *\r\n * @todo Add ability to close by pressing the ESC key when the react hooks is added\r\n */\r\nexport default function Modal({ visible, type, content, title, footer, backdrop, buttons, verticalButtons, className: aditionalClasses, onRequestClose, onOpen, onClose, ...rest }) {\r\n\r\n  const prefix = 'modal'\r\n  const classes = mapClassList({\r\n    [`${prefix}--${type}`]: type,\r\n  })\r\n\r\n  if (!visible) return null\r\n\r\n  return (\r\n    <Portal>\r\n      <div className=\"modal__container\">\r\n        {backdrop && (<div className=\"modal__backdrop\" onClick={() => onRequestClose()} />)}\r\n\r\n        <div\r\n          className={`${prefix} ${classes} ${aditionalClasses}`}\r\n          {...rest}\r\n        >\r\n          {\r\n            (title !== '')\r\n              ? <div className=\"modal__title\">{title}</div>\r\n              : null\r\n          }\r\n\r\n          <div className=\"modal__content\">{content}</div>\r\n\r\n          <ButtonGroup\r\n            vertical={verticalButtons}\r\n            className=\"modal__buttons\"\r\n          >\r\n            {React.Children.toArray(buttons)}\r\n          </ButtonGroup>\r\n        </div>\r\n      </div>\r\n    </Portal>\r\n  )\r\n}\r\n\r\nModal.defaultProps = {\r\n  className: '',\r\n  type: 'default',\r\n  buttons: [],\r\n  backdrop: true,\r\n  title: '',\r\n  verticalButtons: false,\r\n}\r\n\r\nModal.propTypes = {\r\n  /** The visibility state of modal */\r\n  visible: PropTypes.bool.isRequired,\r\n  /** Aditional classes. */\r\n  className: PropTypes.string,\r\n  /** Modal type */\r\n  type: PropTypes.oneOf(['default', 'alert', 'confirm', 'prompt']),\r\n  /** Modal content (anything that can be rendered by React) */\r\n  content: PropTypes.node.isRequired,\r\n  /** Modal title */\r\n  title: PropTypes.string,\r\n  /** Array of buttons (only accepts \"Button\" component of this package) */\r\n  buttons: PropTypes.array,\r\n  /** Show a transparent background behind the modal */\r\n  backdrop: PropTypes.bool,\r\n  /** Function that will be called when the user clicks outside of modal and in the future when pressing the esc key */\r\n  onRequestClose: PropTypes.func.isRequired,\r\n  /** Buttons on vertical */\r\n  verticalButtons: PropTypes.bool,\r\n}\r\n\r\n\r\n/*\r\n\r\n<Modal\r\n  type=\"default\"\r\n  title=\"Hello world!\"\r\n  footer={(<div/>)}\r\n  content={(<div/>)}\r\n  visible={true}\r\n  closable={true}\r\n  onClose={() => {}}\r\n  backdrop={true}\r\n  closeByBackdropClick={true}\r\n  width={400}\r\n  keyboard={true}\r\n  className=\"\"\r\n  animation={[ \"scale\", \"none\", \"opacity\" ]}\r\n>\r\n\r\n */\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { canUseDOM } from '../../Utils'\r\n\r\n/**\r\n * Create an React Portal with component.\r\n *\r\n * @since 0.2.0\r\n */\r\nclass Portal extends React.Component {\r\n  componentWillUnmount() {\r\n    if (this.defaultNode) {\r\n      document.body.removeChild(this.defaultNode)\r\n    }\r\n\r\n    this.defaultNode = null\r\n  }\r\n\r\n  render() {\r\n    if (!canUseDOM()) return null\r\n\r\n    if (!this.props.node && !this.defaultNode) {\r\n      this.defaultNode = document.createElement('div')\r\n\r\n      document.body.appendChild(this.defaultNode)\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.props.node || this.defaultNode\r\n    )\r\n  }\r\n}\r\n\r\nPortal.propTypes = {\r\n  /** Portal content */\r\n  children: PropTypes.node.isRequired,\r\n  /** The root node for React create the portal, if not specified, a div will automatically be created at the end of the body tag. */\r\n  node: PropTypes.any\r\n}\r\n\r\nexport default Portal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { mapClassList } from '../../Utils'\r\n\r\n/**\r\n * Toggle component.\r\n *\r\n * @since 0.1.0\r\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Toggle\r\n */\r\nexport default function Toggle({ color, size, className: aditionalClasses, ...rest }) {\r\n\r\n  const prefix = 'toggle'\r\n  const classes = mapClassList({\r\n    [`${prefix}--${color}`]: color,\r\n    [`${prefix}--${size}`]: size\r\n  })\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={`${prefix} ${classes} ${aditionalClasses}`}\r\n        {...rest}\r\n      />\r\n      <div className=\"toggle__icon\" />\r\n    </label>\r\n  )\r\n}\r\n\r\nToggle.defaultProps = {\r\n  color: 'green',\r\n  size: 'default',\r\n  className: ''\r\n}\r\n\r\nToggle.propTypes = {\r\n  /** Aditional classes. */\r\n  className: PropTypes.string,\r\n  /** The checked state for CONTROLLED components. */\r\n  checked: PropTypes.bool,\r\n  /** The initial state value for UNCONTROLLED components. */\r\n  defaultChecked: PropTypes.bool,\r\n  /** Disable or not the toggle. */\r\n  disabled: PropTypes.bool,\r\n  /** Color of progress bar. */\r\n  color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'gray' ]),\r\n  /** size of toggle */\r\n  size: PropTypes.oneOf([ 'default', 'small', 'big' ]),\r\n  /** Function callback when user change the state */\r\n  onChange: PropTypes.func\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { mapClassList } from '../../Utils'\r\n\r\n/**\r\n * ProgressBar component.\r\n *\r\n * @since 0.1.0\r\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/ProgressBar\r\n */\r\nexport default function ProgressBar({ value, height, round, color, infinite, className: aditionalClasses, ...rest }) {\r\n\r\n  const prefix = 'progressbar'\r\n  const classes = mapClassList({\r\n    [`${prefix}--${color}`]: color,\r\n    [`${prefix}--round`]: round,\r\n    [`${prefix}--infinite`]: infinite\r\n  })\r\n  const percentage = Math.max(0, Math.min(value, 100))\r\n\r\n  return (\r\n    <div\r\n      className={`${prefix} ${classes} ${aditionalClasses}`}\r\n      style={{ height }}\r\n      {...rest}\r\n    >\r\n      <span style={{ width: percentage + '%' }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nProgressBar.defaultProps = {\r\n  height: 3,\r\n  round: false,\r\n  color: 'blue',\r\n  infinite: false,\r\n  className: ''\r\n}\r\n\r\nProgressBar.propTypes = {\r\n  /** Percentage of progress. (0 - 100) */\r\n  value: PropTypes.number.isRequired,\r\n  /** Height of element */\r\n  height: PropTypes.number,\r\n  /** Round edges. */\r\n  round: PropTypes.bool,\r\n  /** Color of progress bar. */\r\n  color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'gray', 'white' ]),\r\n  /** Show an animation when load it is not forecast to end. */\r\n  infinite: PropTypes.bool,\r\n  /** Aditional classes. */\r\n  className: PropTypes.string,\r\n}\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * Avatar component.\n *\n * @since 0.1.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Avatar\n */\nexport default function Avatar({ src, size, round, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'avatar'\n  const classes = mapClassList({\n    [`${prefix}--${size}`]: size,\n    [`${prefix}--round`]: round\n  })\n\n  return (\n    <img\n      src={src}\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      style={(typeof size === 'number') ? { height: size, width: size } : {}}\n      {...rest}\n    />\n  )\n}\n\nAvatar.defaultProps = {\n  size: 'default',\n  round: false,\n  className: ''\n}\n\nAvatar.propTypes = {\n  /** Image url. */\n  src: PropTypes.string.isRequired,\n  /** Size of avatar. Can be \"default\", \"small\", \"big\" or you can set a custom size by providing a number. */\n  size: PropTypes.oneOfType([ PropTypes.number, PropTypes.oneOf([ 'default', 'small', 'big' ]) ]),\n  /** Rounded element */\n  round: PropTypes.bool,\n  /** Aditional classes. */\n  className: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * Spinner component.\n * \n * @since 0.1.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Spinner\n */\nexport default function Spinner({ size, className: aditionalClasses, ...rest }) {\n  \n  const prefix = 'preloader'\n  const classes = mapClassList({\n    [`${prefix}--${size}`]: size,\n  })\n  \n  return (\n    <div\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      style={(typeof size === 'number') ? { height: size, width: size } : {}}\n      {...rest}\n    />\n  )\n}\n\nSpinner.defaultProps = {  \n  className: '',\n  size: 'default'\n}\n\nSpinner.propTypes = {\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Size of spinner. Can be \"default\", \"small\", \"big\" or you can set a custom size by providing a number. */\n  size: PropTypes.oneOfType([ PropTypes.number, PropTypes.oneOf([ 'default', 'small', 'big' ]) ])\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * Checkbox component.\n *\n * @since 0.1.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Checkbox\n */\nexport default function Checkbox({ color, size, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'checkbox'\n  const classes = mapClassList({\n    [`${prefix}--${color}`]: color,\n    [`${prefix}--${size}`]: size,\n  })\n\n  return (\n    <input\n      type=\"checkbox\"\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      style={(typeof size === 'number') ? { height: size, width: size } : {}}\n      {...rest}\n    />\n  )\n}\n\nCheckbox.defaultProps = {\n  className: '',\n  color: 'default',\n  size: 'default'\n}\n\nCheckbox.propTypes = {\n  /** State of checkbox for CONTROLLED components. */\n  checked: PropTypes.bool,\n  /** The initial checkbox state for UNCONTROLLED components. */\n  defaultChecked: PropTypes.bool,\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Color of checkbox. */\n  color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'gray' ]),\n  /** Size of checkbox. */\n  size: PropTypes.oneOfType([ PropTypes.number, PropTypes.oneOf([ 'default', 'small', 'big' ]) ]),\n  /** https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-name */\n  name: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * Radio component.\n *\n * @since 0.1.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Radio\n */\nexport default function Radio({ color, size, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'radio'\n  const classes = mapClassList({\n    [`${prefix}--${color}`]: color,\n    [`${prefix}--${size}`]: size,\n  })\n\n  return (\n    <input\n      type=\"radio\"\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      style={(typeof size === 'number') ? { height: size, width: size } : {}}\n      {...rest}\n    />\n  )\n}\n\nRadio.defaultProps = {\n  className: '',\n  color: 'default',\n  size: 'default'\n}\n\nRadio.propTypes = {\n  /** State of radio for CONTROLLED components. */\n  checked: PropTypes.bool,\n  /** The initial radio state for UNCONTROLLED components. */\n  defaultChecked: PropTypes.bool,\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Color of radio. */\n  color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'gray' ]),\n  /** Size of radio. */\n  size: PropTypes.oneOfType([ PropTypes.number, PropTypes.oneOf([ 'default', 'small', 'big' ]) ]),\n  /** https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-name */\n  name: PropTypes.string,\n  /** Callback function when user change state */\n  onChange: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * RangeSlider component.\n *\n * @since 0.1.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/RangeSlider\n *\n * @todo Quandos o React hooks for lançado fazer um componente controlado para criar uma barrinha colorida atrás da bolinha do elemento e um balãozinho com o valor selecionado em cima .\n */\nexport default function RangeSlider({ block, /*color,*/ className: aditionalClasses, ...rest }) {\n\n  const prefix = 'range-slider'\n  const classes = mapClassList({\n    // [`${prefix}--${color}`]: color,\n    [`${prefix}--block`]: block,\n  })\n\n  return (\n    <input\n      type=\"range\"\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      {...rest}\n    />\n  )\n}\n\nRangeSlider.defaultProps = {\n  className: '',\n  // color: 'default',\n  disabled: false,\n  block: false,\n  min: 0,\n  max: 100,\n  step: 1,\n  onChange: function(event) {}\n}\n\nRangeSlider.propTypes = {\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Minimum value. */\n  min: PropTypes.number,\n  /** Maximum value. */\n  max: PropTypes.number,\n  /** Minimal step between values. */\n  step: PropTypes.number,\n  /** The input value for CONTROLLED components */\n  value: PropTypes.number,\n  /** The initial input value for UNCONTROLLED components */\n  defaultValue: PropTypes.number,\n  /** Color of the element. */\n  // color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'gray', 'white', 'black' ]),\n  /** Disable or not the range. */\n  disabled: PropTypes.bool,\n  /** Fit range width to its parent width. */\n  block: PropTypes.bool,\n  /** Event fired when slider value change. */\n  onChange: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * Badge component.\n *\n * @since 0.1.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Badge\n */\nexport default function Badge({ children, color, size, uppercase, round, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'badge'\n  const classes = mapClassList({\n    [`${prefix}--${color}`]: color,\n    [`${prefix}--${size}`]: size,\n    [`${prefix}--uppercase`]: uppercase,\n  })\n\n  return (\n    <span\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      {...rest}\n    >\n      {size !== 'tiny' && children}\n    </span>\n  )\n}\n\nBadge.defaultProps = {\n  className: '',\n  color: 'default',\n  size: 'default',\n  uppercase: false,\n  children: ''\n}\n\nBadge.propTypes = {\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Badge color. */\n  color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'gray', 'white', 'black' ]),\n  /** Badge size. */\n  size: PropTypes.oneOf([ 'default', 'tiny', 'small', 'big' ]),\n  /** Transform all the text inside the badge in the uppercase. */\n  uppercase: PropTypes.bool,\n  /** Anything that can be rendered by React. */\n  children: PropTypes.node\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\nimport Portal from '../Portal/Portal'\n\n/**\n * Popover component.\n *\n * @since 0.2.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Popover\n *\n * @todo Make more keyboard-friendly navigation\n */\nexport default class Popover extends React.Component {\n  state = {\n    isOpen: false,\n\n    popoverPosition: { top: 0, left: 0},\n    arrowPosition: { top: 0, left: 0}\n  }\n\n  childrenRef = React.createRef() // Referência ao elemento filho\n  popoverRef = React.createRef() // Referência ao popover criado na tela\n\n  componentDidMount() {\n    if (this.props.trigger === 'hover') {\n      var t = null\n      this.childrenRef.current.addEventListener('mouseenter', this.me = () => {\n        t = setTimeout(this.open, this.props.mouseEnterDelay)\n      })\n      this.childrenRef.current.addEventListener('mouseleave', this.ml = () => {\n        clearTimeout(t)\n        this.close()\n      })\n    } else {\n      document.addEventListener('click', this.handleClick)\n    }\n  }\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick)\n    this.childrenRef.current.removeEventListener('mouseenter', this.me)\n    this.childrenRef.current.removeEventListener('mouseleave', this.ml)\n  }\n\n  /**\n   * Mostrar popover na tela.\n   */\n  open = () => {\n    this.setState({ isOpen: true }, this.calcPopoverPosition)\n\n    this.popoverRef.current.getElementsByClassName('popover__content')[0].focus()\n  }\n\n  /**\n   * Ocultar popover na tela.\n   */\n  close = () => {\n    this.setState({ isOpen: false })\n  }\n\n  /**\n   * Alterar visibilidade com base no estado anterior.\n   */\n  troggleVisibility = () => {\n    let { isOpen } = this.state\n\n    if (isOpen === true) this.close()\n    else this.open()\n  }\n\n  /**\n   * Calcular a posição do popover baseado no elemento filho.\n   */\n  calcPopoverPosition = () => {\n    const child = this.childrenRef.current.getBoundingClientRect()\n    const pop = this.popoverRef.current.getBoundingClientRect()\n\n    const childWidthMiddle = child.left + (child.width / 2)\n    const childHeightMiddle = child.top + (child.height / 2)\n    const maxLeft = window.innerWidth - pop.width - 4 // Impedir que o popover ultrapasse os limites da tela\n\n    switch (this.props.placement) {\n      // Popover posicionado abaixo do elemento\n      case 'bottom': {\n        var popoverPosition = {\n          top: (window.scrollY + child.top + child.height + 10),\n          left: window.scrollX + Math.max(4, Math.min(maxLeft, (childWidthMiddle - (pop.width / 2))))\n        }\n        var arrowPosition = {\n          top: -(13 / 2),\n          left: childWidthMiddle - popoverPosition.left\n        }\n        break;\n      }\n\n      // Popover posicionado acima do elemento\n      case 'top': {\n        var popoverPosition = {\n          top: (window.scrollY + child.top - pop.height - 5),\n          left: window.scrollX + Math.max(4, Math.min(maxLeft, (childWidthMiddle - (pop.width / 2))))\n        }\n        var arrowPosition = {\n          top: pop.height - (20 / 2),\n          left: childWidthMiddle - popoverPosition.left\n        }\n        break;\n      }\n\n      // Popover posicionado do lado direito do elemento\n      case 'right': {\n        var popoverPosition = {\n          top: (window.scrollY + childHeightMiddle - (pop.height / 2) + 2),\n          left: (window.scrollX + child.left + child.width + 3)\n        }\n        var arrowPosition = {\n          top: (pop.height / 2) - (14 / 2),\n          left: 4\n        }\n        break;\n      }\n\n      // Popover posicionado do lado esquerdo do elemento\n      case 'left': {\n        var popoverPosition = {\n          top: (window.scrollY + childHeightMiddle - (pop.height / 2) + 2),\n          left: (window.scrollX + child.left - pop.width - 3)\n        }\n        var arrowPosition = {\n          top: (pop.height / 2) - (14 / 2),\n          left: pop.width\n        }\n        break;\n      }\n\n      default: break;\n    }\n\n    this.setState({\n      popoverPosition,\n      arrowPosition\n    })\n  }\n\n  /**\n   * Função que é chamada em qualquer clique do usuário e checa o que deve ser feito,\n   * se deve abrir ou fechar o popover.\n   */\n  handleClick = (event) => {\n    if (this.childrenRef.current.contains(event.target)) {\n      // Click no this.childrenRef\n      this.troggleVisibility()\n    } else {\n      // Click fora this.childrenRef\n\n      // Checar se o click foi dentro do popover e se a propriedade \"closeOnInnerClick\" for true, fechar o popover\n      if (\n        this.popoverRef.current && this.popoverRef.current.contains(event.target)\n        && !this.props.closeOnInnerClick\n      ) return;\n\n      this.close()\n    }\n  }\n\n  render() {\n    const { children, content, backdrop, placement, withoutArrow, color, className: aditionalClasses, trigger, closeOnInnerClick, mouseEnterDelay, ...rest } = this.props\n\n    const prefix = 'popover'\n    const classes = mapClassList({\n      [`${prefix}--${placement}`]: placement,\n      [`${prefix}--${color}`]: color,\n    })\n\n    const { isOpen, popoverPosition, arrowPosition } = this.state\n\n    return (\n      <React.Fragment>\n        <span ref={this.childrenRef}>\n          {children}\n        </span>\n\n        {isOpen && (\n          <Portal>\n            {backdrop && (<div className=\"popover__backdrop\" />)}\n\n            <div\n              ref={this.popoverRef}\n              className={`${prefix} ${classes} ${aditionalClasses}`}\n              style={popoverPosition}\n              {...rest}\n            >\n              {!withoutArrow && (<span className=\"popover__arrow\" style={arrowPosition} />)}\n\n              <div className=\"popover__content\" tabIndex=\"-1\">\n                {content}\n              </div>\n            </div>\n          </Portal>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nPopover.defaultProps = {\n  className: '',\n  backdrop: false,\n  trigger: 'click',\n  mouseEnterDelay: 250,\n  placement: 'bottom',\n  closeOnInnerClick: false,\n  color: 'default',\n  withoutArrow: false\n}\n\nPopover.propTypes = {\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Element the will be used to trigger the popover */\n  children: PropTypes.node.isRequired,\n  /** The content of popover (anything that can be rendered by React) */\n  content: PropTypes.node.isRequired,\n  /** Show a transparent background behind the popover */\n  backdrop: PropTypes.bool,\n  /** The trigger */\n  trigger: PropTypes.oneOf([ 'click', 'hover' ]),\n  /**  */\n  mouseEnterDelay: PropTypes.number,\n  /** Popover position */\n  placement: PropTypes.oneOf([ 'top', 'left', 'bottom', 'right']),\n  /** Close when user click inside popover */\n  closeOnInnerClick: PropTypes.bool,\n  /** Popover color */\n  color: PropTypes.oneOf([ 'default', 'blue', 'red', 'green', 'yellow', 'gray', 'black' ]),\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\n\n/**\n * Card component.\n *\n * @since 0.2.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Card\n */\nexport default function Card({ children, shadow, outline, header, footer, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'card'\n  const classes = mapClassList({\n    [`${prefix}--shadow`]: shadow,\n    [`${prefix}--outline`]: outline,\n  })\n\n  return (\n    <div\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      {...rest}\n    >\n      {header && (\n        <div className=\"card__header\">{header}</div>\n      )}\n      \n      <div className=\"card__content\">\n        {children}\n      </div>\n      \n      {footer && (\n        <div className=\"card__footer\">{footer}</div>\n      )}\n    </div>\n  )\n}\n\nCard.defaultProps = {\n  className: '',\n  outline: false,\n  shadow: false,\n  header: false,\n  footer: false\n}\n\nCard.propTypes = {\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Enable long shadow */\n  shadow: PropTypes.bool,\n  /** Card without shadow */\n  outline: PropTypes.bool,\n  /** Anything that can be rendered by React */\n  children: PropTypes.node,\n  /** Card header (anything that can be rendered by React) */\n  header: PropTypes.oneOfType([ PropTypes.node, PropTypes.bool ]),\n  /** Card footer (anything that can be rendered by React) */\n  footer: PropTypes.oneOfType([ PropTypes.node, PropTypes.bool ]),\n\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { mapClassList } from '../../Utils'\nimport Popover from '../Popover/Popover'\n\n/**\n * Tooltip component.\n *\n * @since 0.2.0\n * @see https://httpiago.github.io/ios-theme-toolkit/#/components/Tooltip\n */\nexport default function Tooltip({ text, className: aditionalClasses, ...rest }) {\n\n  const prefix = 'tooltip'\n  const classes = mapClassList({\n    // [`${prefix}--${color}`]: color,\n  })\n\n  return (\n    <Popover\n      trigger=\"hover\"\n      backdrop={false}\n      color=\"black\"\n      content={text}\n      className={`${prefix} ${classes} ${aditionalClasses}`}\n      {...rest}\n    />\n  )\n}\n\nTooltip.defaultProps = {\n  className: '',\n  withoutArrow: false,\n  mouseEnterDelay: 600\n}\n\nTooltip.propTypes = {\n  text: PropTypes.string.isRequired,\n  /** Aditional classes. */\n  className: PropTypes.string,\n  /** Without arrow */\n  withoutArrow: PropTypes.bool,\n  /** Delay for show tooltip */\n  mouseEnterDelay: PropTypes.number\n}\n","import Button from './components/Button/Button.js'\r\nimport ButtonGroup from './components/ButtonGroup/ButtonGroup.js'\r\nimport Input from './components/Input/Input.js'\r\nimport Toggle from './components/Toggle/Toggle.js'\r\nimport ProgressBar from './components/ProgressBar/ProgressBar.js'\r\nimport Avatar from './components/Avatar/Avatar.js'\r\nimport Spinner from './components/Spinner/Spinner.js'\r\nimport Checkbox from './components/Checkbox/Checkbox'\r\nimport Radio from './components/Radio/Radio'\r\nimport RangeSlider from './components/RangeSlider/RangeSlider'\r\nimport Badge from './components/Badge/Badge'\r\nimport Popover from './components/Popover/Popover'\r\nimport Portal from './components/Portal/Portal'\r\nimport Card from './components/Card/Card'\r\nimport Tooltip from './components/Tooltip/Tooltip'\r\nimport List from './components/List/List'\r\nimport Modal from './components/Modal/Modal'\r\nimport Drawer from './components/Drawer/Drawer'\nimport ActionSheet from './components/ActionSheet/ActionSheet'\r\n\r\nexport {\r\n  Button,\r\n  ButtonGroup,\r\n  Input,\r\n  Toggle,\r\n  ProgressBar,\r\n  Avatar,\r\n  Spinner,\r\n  Checkbox,\r\n  Radio,\r\n  RangeSlider,\r\n  Select,\r\n  Badge,\r\n  Popover,\r\n  Portal,\r\n  Card,\r\n  Tooltip,\r\n  List,\r\n  Modal,\r\n  Drawer,\r\n\n  ActionSheet,}\r\n"],"sourceRoot":""}