// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test ProgressBar component should render correctly based on last snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProgressBar
    className="aditionalClass"
    color="blue"
    height={3}
    infinite={false}
    round={false}
    value={47}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <span
        style={
          Object {
            "width": "47%",
          }
        }
      />,
      "className": "progressbar progressbar--blue aditionalClass",
      "style": Object {
        "height": 3,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "style": Object {
          "width": "47%",
        },
      },
      "ref": null,
      "rendered": null,
      "type": "span",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          style={
            Object {
              "width": "47%",
            }
          }
        />,
        "className": "progressbar progressbar--blue aditionalClass",
        "style": Object {
          "height": 3,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "style": Object {
            "width": "47%",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
