// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Popover component should render correctly based on last snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Popover
    backdrop={false}
    className="aditionalClass"
    closeOnInnerClick={false}
    color="default"
    content="Test content"
    mouseEnterDelay={250}
    placement="bottom"
    trigger="click"
    withoutArrow={false}
  >
    <div
      className="check-children"
    >
      Hello world
    </div>
  </Popover>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <span>
          <div
            className="check-children"
          >
            Hello world
          </div>
        </span>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="check-children"
          >
            Hello world
          </div>,
        },
        "ref": Object {
          "current": null,
        },
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Hello world",
            "className": "check-children",
          },
          "ref": null,
          "rendered": "Hello world",
          "type": "div",
        },
        "type": "span",
      },
      false,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <span>
            <div
              className="check-children"
            >
              Hello world
            </div>
          </span>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="check-children"
            >
              Hello world
            </div>,
          },
          "ref": Object {
            "current": null,
          },
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hello world",
              "className": "check-children",
            },
            "ref": null,
            "rendered": "Hello world",
            "type": "div",
          },
          "type": "span",
        },
        false,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
